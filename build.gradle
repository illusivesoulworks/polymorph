plugins {
    id 'fabric-loom' version '0.9-SNAPSHOT'
    id 'com.matthewprenger.cursegradle' version '1.4.0'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
}

repositories {
    maven { 
        url = "https://jitpack.io" 
    }
    maven {
        url "https://maven.shedaniel.me/"
    }
    maven {
        name = "Ladysnake Mods"
        url = "https://ladysnake.jfrog.io/artifactory/mods"
    }
    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }

//    maven {
//        url = 'https://maven.cafeteria.dev'
//        content {
//            includeGroup 'net.adriantodt.fabricmc'
//        }
//    }
//    maven {
//        url "https://maven.jamieswhiteshirt.com/libs-release"
//        content {
//            includeGroup "com.jamieswhiteshirt"
//        }
//    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation fabricApi.module("fabric-api-base", project.fabric_version)
    modImplementation fabricApi.module("fabric-lifecycle-events-v1", project.fabric_version)
    modImplementation fabricApi.module("fabric-networking-api-v1", project.fabric_version)
    modImplementation fabricApi.module("fabric-resource-loader-v0", project.fabric_version)
    modImplementation fabricApi.module("fabric-command-api-v1", project.fabric_version)
    modImplementation fabricApi.module("fabric-commands-v0", project.fabric_version)
    modImplementation fabricApi.module("fabric-networking-v0", project.fabric_version)

    modApi "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cca_version}"
    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-block:${project.cca_version}"

    modCompileOnly "curse.maven:roughly-enough-items-310111:${project.rei_version}"
    modRuntime "curse.maven:roughly-enough-items-310111:${project.rei_version}"
    modCompileOnly "curse.maven:fabricfurnaces-315534:${project.file_fabricfurnaces}"
    modRuntime "curse.maven:fabricfurnaces-315534:${project.file_fabricfurnaces}"
//    modCompileOnly "curse.maven:ironfurnaces-318036:${project.file_ironfurnaces}"
//    modRuntime "curse.maven:ironfurnaces-318036:${project.file_ironfurnaces}"
    modCompileOnly "curse.maven:origins-391943:${project.file_origins}"
    modRuntime "curse.maven:origins-391943:${project.file_origins}"
    modCompileOnly "curse.maven:originsclasses-401833:${project.file_originsclasses}"
    modRuntime "curse.maven:originsclasses-401833:${project.file_originsclasses}"
    modRuntime "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    //    modRuntime "curse.maven:fastfurnace-364540:3023434"

    include fabricApi.module("fabric-api-base", project.fabric_version)
    include fabricApi.module("fabric-lifecycle-events-v1", project.fabric_version)
    include fabricApi.module("fabric-networking-v0", project.fabric_version)
    include fabricApi.module("fabric-networking-api-v1", project.fabric_version)
    include fabricApi.module("fabric-resource-loader-v0", project.fabric_version)
    include fabricApi.module("fabric-command-api-v1", project.fabric_version)
    include fabricApi.module("fabric-commands-v0", project.fabric_version)
    include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cca_version}"
    include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-block:${project.cca_version}"

//    // temporary fix: without it runClient will not work because of missing dependencies for rei, fabric furnaces and origins
//    modImplementation "com.github.apace100:apoli:${project.apoli_version}"
//    include "com.github.apace100:apoli:${project.apoli_version}"
//    include modImplementation("com.jamieswhiteshirt:reach-entity-attributes:${project.reach_version}")
//    modApi("dev.architectury:architectury-fabric:${architectury_version}")
//    modImplementation 'com.github.Draylar.omega-config:omega-config:1.17-SNAPSHOT'
//    include 'com.github.Draylar.omega-config:omega-config:1.17-SNAPSHOT'
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand 'version': project.version
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"

    it.options.release = 16
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set("sources")
    from sourceSets.main.allSource
}

sourceSets {
    main {
        resources {
            srcDirs += 'docs'
        }
    }
}

curseforge {
    project {
        apiKey = findProperty('curseKey') ?: 0
        id = "${curse_id}"
        releaseType = "${curse_release}"
        changelogType = 'markdown'
        changelog = file('docs/CHANGELOG.md')
        addGameVersion "Java 16"
        addGameVersion "Fabric"
        "${curse_versions}".split(',').each {
            addGameVersion "${it}"
        }
        addArtifact(sourcesJar)
        mainArtifact(file("${project.buildDir}/libs/${archivesBaseName}-${version}.jar"))

        relations {
            embeddedLibrary 'fabric-api'
            embeddedLibrary 'cardinal-components'
        }

        afterEvaluate {
            uploadTask.dependsOn(remapJar)
        }
    }
    options {
        forgeGradleIntegration = false
    }
}
